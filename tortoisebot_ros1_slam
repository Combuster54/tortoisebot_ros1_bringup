# Start from ROS base image
FROM ros:noetic-ros-base

# Make a catkin workspace
WORKDIR /
RUN mkdir -p /catkin_ws/src
WORKDIR /catkin_ws/src

SHELL [ "/bin/bash" , "-c" ]

# Install dependencies
RUN apt-get update && apt-get install -y git \
    # && apt-get install -y git \
    ros-noetic-joy ros-noetic-teleop-twist-joy \
    ros-noetic-teleop-twist-keyboard ros-noetic-amcl \
    ros-noetic-map-server ros-noetic-move-base \
    ros-noetic-urdf ros-noetic-xacro \
    ros-noetic-rqt-image-view ros-noetic-gmapping \
    ros-noetic-navigation ros-noetic-joint-state-publisher \
    ros-noetic-robot-state-publisher ros-noetic-slam-gmapping \
    ros-noetic-dwa-local-planner ros-noetic-joint-state-publisher-gui \
    ros-noetic-gazebo-ros-pkgs \
    ros-noetic-compressed-image-transport \
    libraspberrypi-dev libraspberrypi0 \
    python3-dev python3-rpi.gpio

# Download Tortoisebot repo
RUN source /opt/ros/noetic/setup.bash \ 
&& cd /catkin_ws/src \
&& catkin_init_workspace \
&& git clone -b noetic https://github.com/rigbetellabs/tortoisebot.git

RUN rm -rf /catkin_ws/src/tortoisebot/tortoisebot_control
RUN rm -rf /catkin_ws/src/tortoisebot/tortoisebot_gazebo
RUN rm -rf /catkin_ws/src/tortoisebot/tortoisebot_navigation
RUN rm -rf /catkin_ws/src/tortoisebot/tortoisebot_firmware
RUN rm -rf /catkin_ws/src/tortoisebot/raspicam_node
RUN rm -rf /catkin_ws/src/tortoisebot/tortoisebot_description
RUN rm -rf /catkin_ws/src/tortoisebot/ydlidar_ros

COPY mapping.launch /catkin_ws/src/tortoisebot/tortoisebot_slam/launch/

# Build workspace
RUN source /opt/ros/noetic/setup.bash \
&& cd /catkin_ws \
&& catkin_make \
&& source /catkin_ws/devel/setup.bash

WORKDIR /catkin_ws

# Source the workspace every time a new shell is opened in the container
RUN echo source /catkin_ws/devel/setup.bash >> ~/.bashrc

CMD ["source" "/opt/ros/$ROS_DISTRO/setup.bash"]
CMD ["source" "/catkin_ws/devel/setup.bash"]
CMD ["roslaunch" "tortoisebot_slam mapping.launch"]
